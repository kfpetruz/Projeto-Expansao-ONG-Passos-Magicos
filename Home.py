# Importa√ß√£o das bibliotecas
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import plotly.graph_objects as go


# Configura√ß√£o da p√°gina
st.set_page_config(page_title= 'ONG Passos M√°gicos', layout='wide', page_icon= 'ü§ù')

# T√≠tulo da p√°gina
st.title('Projeto ONG Passos M√°gicos ü§ù')

cor_estilizada = 'color: #0145AC;'
fonte_negrito = 'font-weight: bold;'

dados = [(2016, 70), (2017, 300), (2018, 550), (2019, 812), (2020, 841), (2021, 824), (2022, 970)]

# Criar um DataFrame a partir da lista de tuplas
linha_do_tempo_ong = pd.DataFrame(dados, columns=['Ano', 'Quantidade de alunos'])


dados_estimados = pd.read_csv('Base de dados\\populacao_estimativa_2001_2021.csv',sep = ';', encoding='utf-8-sig')
novos_nomes = dados_estimados.iloc[2]
dados_estimados = dados_estimados.rename(columns=novos_nomes)
dados_estimados.columns = [str(col).replace('.0', '') for col in dados_estimados.columns]
dados_estimados['Munic√≠pio'].fillna('', inplace=True)
dados_estimados = dados_estimados[dados_estimados['Munic√≠pio'].str.contains('(SP)')]
dados_estimados.reset_index(drop=True, inplace=True)
dados_estimados['Munic√≠pio'] = dados_estimados['Munic√≠pio'].str.replace('(', '')
dados_estimados['Munic√≠pio'] = dados_estimados['Munic√≠pio'].str.replace(')', '')
dados_estimados['Munic√≠pio'] = dados_estimados['Munic√≠pio'].str.replace('SP', '')
dados_estimados['Munic√≠pio'] = dados_estimados['Munic√≠pio'].str.strip()
dados_estimados= dados_estimados[dados_estimados['Munic√≠pio']=='Embu-Gua√ßu']

dados_2022 = pd.read_excel('tb_populacao_economia_idade_distancia.xlsx')
dados_2022 =  dados_2022[dados_2022['Munic√≠pio']=='Embu-Gua√ßu']
dados_estimados['2022'] = dados_2022['Popula√ß√£o no √∫ltimo censo'].values

dados_estimados_ultimos_anos = dados_estimados[dados_estimados.columns[-7:]].T.reset_index()
dados_estimados_ultimos_anos = dados_estimados_ultimos_anos.rename(columns= {'index': 'Ano', 168: 'Popula√ß√£o do munic√≠pio'})
dados_estimados_ultimos_anos['Ano'] = dados_estimados_ultimos_anos['Ano'].astype('int64')

df_alunos_populacao = pd.merge(linha_do_tempo_ong, dados_estimados_ultimos_anos, on='Ano', how='left')
df_alunos_populacao['Quantidade de alunos'] = df_alunos_populacao['Quantidade de alunos'].astype('int64')
df_alunos_populacao['Popula√ß√£o do munic√≠pio'] = df_alunos_populacao['Popula√ß√£o do munic√≠pio'].astype('int64')

df_alunos_populacao['Alunos/Popula√ß√£o'] = df_alunos_populacao['Quantidade de alunos'] /df_alunos_populacao['Popula√ß√£o do munic√≠pio']*100
df_alunos_populacao['Alunos/Popula√ß√£o'] = df_alunos_populacao['Alunos/Popula√ß√£o'].apply(lambda x: '{:.2f}'.format(x))

# Dados
x = df_alunos_populacao['Ano']
y = df_alunos_populacao['Quantidade de alunos']
y2 = df_alunos_populacao['Popula√ß√£o do munic√≠pio']
percentual = df_alunos_populacao['Alunos/Popula√ß√£o'] 

# Criar o gr√°fico
fig = go.Figure()

# Adicionar a linha ao gr√°fico para y
fig.add_trace(go.Scatter(x=x, y=y, mode='lines', name='Quantidade de alunos da ONG', line=dict(color='#0145AC')))

# Adicionar os pontos ao gr√°fico com os percentuais
fig.add_trace(go.Scatter(x=x, y=y, mode='markers', name='Alunos / Popula√ß√£o (percentual)',
                         text=percentual.astype(str)+'%', hoverinfo='text+x+y', marker=dict(color='#0145AC', size=10)))

# Adicionar a linha ao gr√°fico para y2
fig.add_trace(go.Scatter(x=x, y=y2, mode='lines', name='Popula√ß√£o de Embu-Gua√ßu', yaxis='y2', line=dict(color='#82C7A5')))

# Atualizar o layout
fig.update_layout(
    title='Quantidade de alunos da ONG x Popula√ß√£o de Embu-Gua√ßu',
    yaxis=dict(title='Quantidade de alunos da ONG', side='left'),
    yaxis2=dict(
        title='Popula√ß√£o de Embu-Gua√ßu', 
        overlaying='y', 
        side='right'
    ),
    legend=dict(orientation='h', y=1.15, x=0.5, xanchor='center', yanchor='top')
)


## VISUALIZA√á√ÉO NO STREAMLIT
aba1, aba2, aba3 = st.tabs(['Sobre a ONG', 'Fatores de sucesso', 'Impacto Social'])
with aba1:

    st.markdown('<p style="text-align: justify;"> A Passos M√°gicos √© uma organiza√ß√£o social, cujo objetivo √© transformar a vida de crian√ßas e adolescentes do Munic√≠pio de Embu-Gua√ßu, zona sul de S√£o Paulo, em situa√ß√£o de vulnerabilidade social, atrav√©s da educa√ß√£o.</p>', unsafe_allow_html = True)
    
    col1, col2, col3, col4 = st.columns(4)
    with col1: #utilizando a cl√°usula with, mas poder√≠amos escrever apenas "col1." antes da m√©trica
        st.markdown(f"<h2 style='{cor_estilizada}'>+ 30 anos</h2> <span style='{fonte_negrito}'>transformando a vida de crian√ßas e jovens de baixa renda</span>", unsafe_allow_html=True)
    with col2:
        st.markdown(f"<h2 style='{cor_estilizada}'>4 n√∫cleos</h2> <span style='{fonte_negrito}'>distribu√≠dos pelo munic√≠pio </span>", unsafe_allow_html=True)
    with col3:
        st.markdown(f"<h2 style='{cor_estilizada}'>1100</h2> <span style='{fonte_negrito}'>Alunos no programa de Acelera√ß√£o do conhecimento (2023)</span>", unsafe_allow_html=True) 
    with col4:
        st.markdown(f"<h2 style='{cor_estilizada}'>5 a 24 anos</h2> <span style='{fonte_negrito}'>Idade dos benefici√°rios (2022)</span>", unsafe_allow_html=True)

    st.markdown('<p style="text-align: justify;"></p>', unsafe_allow_html = True)
    st.markdown('<p style="text-align: justify;"></p>', unsafe_allow_html = True)
    
    st.markdown('<p style="text-align: justify;"> A Associa√ß√£o teve in√≠cio em 1992, auxiliando crian√ßas em orfanato com origem da idealiza√ß√£o de seus fundadores: Michelle Flues Ivanoff, Dimitri Ivanoff, Carol Ivanoff e Alexandre Ivanoff.</p><p style="text-align: justify;">Em 2016, decidem ampliar o programa para que mais jovens tivessem acesso a essa f√≥rmula m√°gica para transforma√ß√£o que inclui: educa√ß√£o de qualidade, aux√≠lio psicol√≥gico/psicopedag√≥gico, amplia√ß√£o de sua vis√£o de mundo e protagonismo. Passaram ent√£o a atuar como um projeto social e educacional, criando assim a Associa√ß√£o Passos M√°gicos.</p>', unsafe_allow_html = True)
    
    st.markdown(f"<h3 style='{cor_estilizada}'>O que fazemos?</h3>", unsafe_allow_html=True)

    
    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Acelera√ß√£o do Conhecimento:</span> Oferecer uma educa√ß√£o de qualidade, suporte psicol√≥gico e ampliar a vis√£o de mundo de cada aluno impactado. Possui aulas de alfabetiza√ß√£o, l√≠ngua portuguesa e matem√°tica para crian√ßas e adolescentes. Os alunos s√£o divididos por n√≠vel de conhecimento, determinado por meio de uma prova de sondagem que √© realizada ao ingressarem na Passos M√°gicos, e s√£o inseridos em turmas que variam da alfabetiza√ß√£o at√© o n√≠vel 8, sendo:</p>', unsafe_allow_html = True)
    aceleracao = {
    'Fase de alfabetiza√ß√£o': ['Alunos que estejam em fase de alfabetiza√ß√£o ou que apresentem dificuldade na leitura e na escrita'],
    'Fases 1 e 2': ['Focadas em conte√∫do do ensino fundamental 1, sendo explorados com mais detalhes de um n√≠vel para o outro'],
    'Fases 3 e 4': ['Focadas em conte√∫do do ensino fundamental 2, sendo explorado com mais detalhes de um n√≠vel para o outro'],
    'Fases 5 e 6':['Focadas em conte√∫dos para jovens e adolescentes do ensino m√©dio para um maior n√≠vel de conhecimento'],
    'Fases 7 e 8':['Destinadas aos jovens alunos terceiranistas e vestibulandos com foco na acelera√ß√£o do conhecimento']
    }
    df_aceleracao = pd.DataFrame(aceleracao)
    html = df_aceleracao.to_html(index=False)
    # Adicionar estilos CSS para centralizar os nomes das colunas e justificar o texto das c√©lulas

    # Adicionando estilos CSS para a cor da borda de todas as c√©lulas
    html_estilizado = html.replace('<th>', '<th style=\'border: 2px solid #0145AC; color: #0145AC; text-align: center;\'>').replace('<td>', '<td style=\'border: 2px solid #0145AC; text-align: center;\'>')

    # Exibir a tabela estilizada no Streamlit
    st.write("<style>table {{ width: 100%; border-collapse: collapse; }} th, td {{ padding: 10px; }}</style>{}".format(html_estilizado), unsafe_allow_html=True)

    st.markdown('<p style="text-align: justify;"></p>', unsafe_allow_html = True)

    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Programas Especiais:</span> Projeto de apadrinhamento e de interc√¢mbio, visando uma maior integra√ß√£o dos alunos com diferentes ambientes e culturas.</p>', unsafe_allow_html = True)
    programas = {
    'Apadrinhamento': ['Os alunos que se destacam dentro da Associa√ß√£o Passos M√°gicos, a partir da evolu√ß√£o apresentada dentro da aplica√ß√£o do conhecimento absorvido e dos princ√≠pios vividos, s√£o expostos a diversas oportunidades e, dentre elas, a de ser apadrinhado e viver a experi√™ncia de estudar em uma escola de ensino particular.'],
    'Interc√¢mbio': ['Visando uma maior integra√ß√£o dos alunos com diferentes ambientes e culturas, a Associa√ß√£o Passos M√°gicos promove diversas atividades que possibilitam esse contato.'],
    'Gradua√ß√£o': ['O suporte da Passos M√°gicos no desenvolvimento acad√™mico de nossos alunos, se estende al√©m da fase escolar.']
    }
    df_programas = pd.DataFrame(programas)
    html = df_programas.to_html(index=False)

    # Adicionando estilos CSS para a cor da borda de todas as c√©lulas
    html_estilizado = html.replace('<th>', '<th style=\'border: 2px solid #0145AC; color: #0145AC; text-align: center;\'>').replace('<td>', '<td style=\'border: 2px solid #0145AC; text-align: center;\'>')

    # Exibir a tabela estilizada no Streamlit
    st.write("<style>table {{ width: 100%; border-collapse: collapse; }} th, td {{ padding: 10px; }}</style>{}".format(html_estilizado), unsafe_allow_html=True)

    st.markdown('<p style="text-align: justify;"></p>', unsafe_allow_html = True)

    st.markdown('<p style="text-align: justify;"><span style="font-weight: bold">Eventos e a√ß√µes sociais:</span> Anualmente, em prol dos alunos, s√£o promovidas campanhas de arrecada√ß√£o para presentear as centenas de crian√ßas e adolescentes Passos M√°gicos.</p>', unsafe_allow_html = True)
    eventos = {
    'Materiais escolares': ['Campanha de arrecada√ß√£o de doa√ß√µes de materiais para os alunos bolsistas  e alunos no geral.'],
    'P√°scoa M√°gica': ['Arrecada√ß√£o de ovos de p√°scoa, barras e caixas de chocolate para distribuir aos alunos.'],
    'Dia das Crian√ßas': ['Arrecada√ß√£o de brinquedos para os alunos.'],
    'Campanha do Agasalho': ['Arrecada√ß√£o de roupas de inverno  para os alunos e suas fam√≠lias.'],
    'Natal m√°gico': ['Na a√ß√£o s√£o entregues presentes pensados especialmente nos alunos e, as sacolas feitas a partir das doa√ß√µes e distribu√≠das aos familiares das crian√ßas.'],
    'Confraterniza√ß√£o de encerramento': ['Anualmente um evento de confraterniza√ß√£o √© promovido para celebrar as conquistas e realiza√ß√µes do ano que se passou.']
    }
    df_eventos = pd.DataFrame(eventos)
    html = df_eventos.to_html(index=False)

    # Adicionando estilos CSS para a cor da borda de todas as c√©lulas
    html_estilizado = html.replace('<th>', '<th style=\'border: 2px solid #0145AC; color: #0145AC; text-align: center;\'>').replace('<td>', '<td style=\'border: 2px solid #0145AC; text-align: center;\'>')

    # Exibir a tabela estilizada no Streamlit
    st.write("<style>table {{ width: 100%; border-collapse: collapse; }} th, td {{ padding: 10px; }}</style>{}".format(html_estilizado), unsafe_allow_html=True)

with aba2:

    # st.title('Fatores de Sucesso')
    col1, col2, col3, col4 = st.columns(4)
    with col1:
        st.markdown(f"<h2 style='{cor_estilizada}'>1100</h2> <span style='{fonte_negrito}'>Alunos no programa de Acelera√ß√£o do conhecimento (2023)</span>", unsafe_allow_html=True) 
    with col2: #utilizando a cl√°usula with, mas poder√≠amos escrever apenas "col1." antes da m√©trica
        st.markdown(f"<h2 style='{cor_estilizada}'>98</h2> <span style='{fonte_negrito}'>Bolsistas em institui√ß√µes de ensino particular (2023)</span>", unsafe_allow_html=True)
    with col3:
        st.markdown(f"<h2 style='{cor_estilizada}'>103</h2> <span style='{fonte_negrito}'>Universit√°rios em institui√ß√µes de ensino superior (2023)</span>", unsafe_allow_html=True)
    with col4:
        st.markdown(f"<h2 style='{cor_estilizada}'>41</h2> <span style='{fonte_negrito}'>Universit√°rios formados (2023)</span>", unsafe_allow_html=True) 
        # st.markdown(f"<h2 style='{cor_estilizada}'>Mais de 10.500</h2> <span style='{fonte_negrito}'>horas de aula no Programa de Acelera√ß√£o do Conhecimento (PAC) </span>", unsafe_allow_html=True)

    st.markdown("<div style='height: 40px;'></div>", unsafe_allow_html=True) #Linha 
    # Exibir o gr√°fico
    st.plotly_chart(fig, use_container_width=True)

    dados = [(2016, 70, 26, 0, 5, 1, 0, 0, 0), (2017, 300, 35, 0, 6, 1, 1, 0, 0), (2018, 550, 80, 1, 7, 1, 1, 0, 0), (2019, 812, 106, 2, 9, 2, 1, 0, 0), (2020, 841, 112, 26, 9, 2, 1, 0, 0), (2021, 824, 133, 51, 12, 2, 2, 0, 0), (2022, 970, 112, 71, 13, 3, 3, 1, 1), (2023, 1100, 100, 94, 14, 3, 3, 1, 1)]
    linha_do_tempo_completo = pd.DataFrame(dados, columns=['Ano', 'Quantidade de alunos', 'Bolsistas em escola parceira', 'Universit√°rios', 'Professores', 'Psic√≥logas', 'Psicopedagoga', 'Psiquiatra', 'Assistente Social'])

    # Fun√ß√£o para plotar o gr√°fico com base nas categorias selecionadas
    def plotar_grafico(categorias_selecionadas):
        fig = go.Figure()
        
        # Adicionar barras para cada categoria selecionada
        for categoria in categorias_selecionadas:
            if categoria == 'Aluno':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Quantidade de alunos'],
                    name='Alunos',
                    marker_color='#6A5ACD'
                ))
            elif categoria == 'Bolsista':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Bolsistas em escola parceira'],
                    name='Bolsistas em escola parceira',
                    marker_color='#1E90FF',
                    opacity=0.7
                ))
            elif categoria == 'Universit√°rio':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Universit√°rios'],
                    name='Universit√°rios',
                    marker_color='#556B2F'
                ))
            elif categoria == 'Professor':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Professores'],
                    name='Professores',
                    marker_color='#0145AC'
                ))

            elif categoria == 'Psic√≥loga':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Psic√≥logas'],
                    name='Psic√≥logas',
                    marker_color='#82C7A5'
                ))

            elif categoria == 'Psicopedagoga':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Psicopedagoga'],
                    name='Psicopedagogas',
                    marker_color='#CD5C5C'
                ))
            
            elif categoria == 'Psiquiatra':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Psiquiatra'],
                    name='Psiquiatras',
                    marker_color='#F4A460'
                ))

            elif categoria == 'Assistente Social':
                fig.add_trace(go.Bar(
                    x=linha_do_tempo_completo['Ano'],
                    y=linha_do_tempo_completo['Assistente Social'],
                    name='Assistente Social',
                    marker_color='#D8BFD8'
                ))

        # Atualizar layout do gr√°fico
        fig.update_layout(
            #legend=dict(orientation='h', y=1.15, x=0.5, xanchor='center', yanchor='top'),
            title='Corpo docente',
            xaxis=dict(title='Ano'),
            yaxis=dict(title='Quantidade'),
            barmode='stack'
        )

        st.plotly_chart(fig, use_container_width=True)


    # Interface do usu√°rio com multiselect (com alunos e professores pr√©-selecionados)
    categorias_selecionadas = st.multiselect(
        'Selecione as categorias:',
        ['Bolsista','Universit√°rio','Professor','Psic√≥loga', 'Psicopedagoga', 'Psiquiatra', 'Assistente Social','Aluno'],
        default=['Professor','Psic√≥loga','Psicopedagoga', 'Psiquiatra', 'Assistente Social']  # Predefinindo Professor e Aluno como selecionados
    )

    # Plotar gr√°fico com base nas categorias selecionadas
    plotar_grafico(categorias_selecionadas)

with aba3:
    col1, col2 = st.columns(2)
    with col1: 
        st.title('Impacto social')
    with col2:
        st.title('Coluna 2')

# 1¬™ aba - Hist√≥ria da Passos(Overview), An√°lise Dados Hist√≥ricos e Resultado das a√ß√µes na cidade - # 2¬™ aba Fatores-Chave de Sucesso - Colocar os big numbers, linha do tempo (Ver o que mais da para aproveitar dos documentos do site e acrescentar percentual por genero, ra√ßa, idade, quantidade de professores(poss√≠vel bignumber), alunos formados no ensino superior(Relat√≥rio universit√°rios completo), cursando ensino superior - colocar que √© referente a 2022 os bignumbers
# 2¬™ aba - Colocar descri√ß√µes com cores destaques 
# 3¬™ aba - An√°lise do Impacto Emocional e Social - Desempenho dos alUnos - (An√°lise do dataset - Notas com o passar dos anos , qual idade tem maior desempenho, notas por mat√©ria, avalia√ß√£o qualitativa (quantidade de coment√°rios sobre os alunos),  tem desist√™ncia? ponto de virada PV)
# 4¬™ aba - Aprimoramento de estrat√©gias e opera√ß√µes Futuras (PIX, Potencias cidades para expans√£o(Modelo) e Previs√£o de aumento de alunos (Quantidade de alunos para os pr√≥ximos anos))
# 5¬™ aba - Sobre

# Anota√ß√µes :
# Hist√≥ria da Passos(Overview) - qualifica√ß√µes dos professores


# Quantidade de popula√ß√£o de Embu Gua√ßu, percentual de matriculados no ensino b√°sico, PIB

# Qual o impacto e potencial para a regi√£o?
# Onde direcionar mais esfor√ßos e recursos?
# O quanto a psicologia impacta a vida das crian√ßas?
# Como medir o desempenho das crian√ßas? Antes e depois
# Como ter uma comunica√ß√£o mais efetiva com todos os alunos?
# Como administrar/monitorar o aluno? Sem perder o contato humanizado
# Quantas pessoas conhecem a Passos? Como mudar o comportamento das pessoas? 
# Qual a Previs√£o de receita e pessoas impactadas?
# Em que momento o aluno come√ßa a acreditar no futuro?
# Como reproduzir em outras regi√µes as a√ß√µes¬†da¬†Passos?
        
    